name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  issues: write
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Unit Test
      run: dotnet run --project test/LoggerUsage.Tests --coverage --coverage-output-format cobertura --coverage-output coverage.cobertura.xml
    - name: Cli Test
      run: dotnet run --project test/LoggerUsage.Cli.Tests --coverage --coverage-output-format cobertura --coverage-output coverage.cobertura.xml
    - name: MCP Test
      run: dotnet run --project test/LoggerUsage.Mcp.Tests --coverage --coverage-output-format cobertura --coverage-output coverage.cobertura.xml
    - name: Generate Code Coverage Report
      run: |
        # using github:
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:test/**/coverage.cobertura.xml -targetdir:coveragereport -reporttypes:MarkdownSummaryGithub
    - name: Comment coverage summary on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('coveragereport/SummaryGithub.md', 'utf8');
          await github.rest.issues.createComment({
            issue_number: context.payload.pull_request.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });

