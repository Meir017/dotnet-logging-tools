name: Publish NuGet Packages

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '10.0.x'
  CONFIGURATION: 'Release'

jobs:
  publish-github-packages:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Pack packages
      run: dotnet pack --configuration ${{ env.CONFIGURATION }} --no-build --output ./packages

    - name: Add GitHub Packages source
      run: dotnet nuget add source --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

    - name: Publish packages to GitHub Packages
      run: |
        for package in ./packages/*.nupkg; do
          echo "Publishing $package..."
          dotnet nuget push "$package" --source "github" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
        done

  publish-nuget-org:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      id-token: write  # enable GitHub OIDC token issuance for trusted publishing

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Pack packages
      run: dotnet pack --configuration ${{ env.CONFIGURATION }} --no-build --output ./packages

    - name: NuGet login (OIDC â†’ temp API key)
      uses: NuGet/login@v1
      id: nuget-login
      with:
        user: meirb  # Your nuget.org username

    - name: Publish packages to NuGet.org
      run: |
        for package in ./packages/*.nupkg; do
          echo "Publishing $package to NuGet.org..."
          dotnet nuget push "$package" --source https://api.nuget.org/v3/index.json --api-key ${{ steps.nuget-login.outputs.NUGET_API_KEY }} --skip-duplicate
        done
